import { useEffect, useState, useCallback } from "react";
// import axios from "axios";
import "../styles/PoolMain.css";
import PoolList from "../pages/PoolList";
import { PoolListProps } from "../pages/PoolList";

const PoolMain = () => {
  const [poolList, setPoolList] = useState<PoolListProps[]>([]);
  const [savePoolList, setSavePoolList] = useState<PoolListProps[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(true);

  useEffect(() => {
    const poolData = () => {
      setIsLoading(true); // Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§ÎäîÏ§ëÏóêÎäî Î°úÎî©Ï§ë ÌëúÏãú
      fetch(
        "https://gateway.pinata.cloud/ipfs/QmeFPnH8KAaK9p8grvCn46abgLc3m9KGUa5eC1XnY7JX2w"
      )
        .then((res) => res.json())
        .then((list) => {
          setPoolList(list.slice(0, 10)); // ÏÑúÎ≤ÑÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º 10Í∞úÎßå Î≥¥Ïó¨Ï£ºÍ≥†
          setSavePoolList(list.slice(10)); // Î≥¥Ïó¨Ï£ºÎäî Îç∞Ïù¥ÌÑ∞ 10Í∞ú Ï†úÏô∏Ìïú ÎÇòÎ®∏ÏßÄÎäî ÎπàÎ∞∞Ïó¥Ïóê Ï†ÄÏû•
          setIsLoading(false); // Îç∞Ïù¥ÌÑ∞Î•º Îã§ Î∂àÎü¨ÏôîÏúºÎ©¥ Î°úÎî©Ï§ë ÎÅù
        });
    };
    poolData();
  }, []);

  const poolSaveData = async () => {
    // ÏÑúÎ≤ÑÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Ï∂îÍ∞ÄÎ°ú Î∞õÏïÑÏò§Îäî Ìï®Ïàò (ÎπÑÎèôÍ∏∞Ï≤òÎ¶¨)
    if (savePoolList.length !== 0) {
      // useState Î∞∞Ïó¥Ïóê Ï†ÄÏû•Îêú Í∏∏Ïù¥Í∞Ä 0Ïù¥ ÏïÑÎãêÍ≤ΩÏö∞ Ïã§Ìñâ
      setIsLoading(true); // Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§ÎäîÏ§ëÏóêÎäî Î°úÎî©Ï§ë ÌëúÏãú
      setTimeout(() => {
        // Î∞îÎ°ú Ïã§ÌñâÌïòÏßÄÎßêÍ≥† 1Ï¥à Îí§Ïóê Ïã§ÌñâÏãúÌÇ§Í∏∞
        setPoolList([...poolList, ...savePoolList.slice(0, 10)]);
        // ÏÑúÎ≤ÑÏóê Îã¥Í∏¥ Í∞í, Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞ 10Í∞ú Í∫ºÎÇ¥Í∏∞
        setSavePoolList(savePoolList.slice(10)); // Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞ 10Í∞ú Ï∂úÎ†•
        setIsLoading(false); // Îç∞Ïù¥ÌÑ∞Î•º Îã§ Î∂àÎü¨ÏôîÏúºÎ©¥ Î°úÎî©Ï§ë ÎÅù
      }, 1000); // üëâ 1Ï¥à
    }
  };

  const infiniteScroll = useCallback(() => {
    //Ïä§ÌÅ¨Î°§ ÎÜíÏù¥Î•º Í∞êÏßÄÌï¥ÏÑú üëâ Ï°∞Í±¥Ïóê ÎßåÏ°±ÌïòÎ©¥ poolSaveData Ìï®Ïàò Ìò∏Ï∂ú
    let scrollHeight = Math.max(
      document.documentElement.scrollHeight,
      document.body.scrollHeight
    );
    let scrollTop = Math.max(
      document.documentElement.scrollTop,
      document.body.scrollTop
    );
    let clientHeight = document.documentElement.clientHeight;

    scrollHeight -= 100; // Ïä§ÌÅ¨Î°§Ïù¥ Îß® ÎÅù ÏßÄÏ†ê(100)Ïóê ÏôîÏùÑÎïå

    if (scrollTop + clientHeight >= scrollHeight && isLoading === false) {
      poolSaveData();
    }
  }, [isLoading]);

  useEffect(() => {
    window.addEventListener("scroll", infiniteScroll, true); // Ïä§ÌÅ¨Î°§ Ïù¥Î≤§Ìä∏ Îì±Î°ù
    return () => window.removeEventListener("scroll", infiniteScroll, true); //Ïä§ÌÅ¨Î°§ Ïù¥Î≤§Ìä∏ ÏÇ≠Ï†ú
  }, [infiniteScroll]);

  return (
    <div className="pool_wrapper">
      <div className="pool_container">
        <div className="pool_title">
          <div className="pool_title_notice">KlayPod Scan</div>
        </div>
        <div>
          <div className="pool_list">
            <div className="pool_top">
              <div className="pool_pair">Pair</div>
              <div className="pool_project">Project</div>
              <div className="pool_tvl">TVL</div>
              <div className="pool_apr">APR</div>
              <div className="pool_link">Link</div>
            </div>
            <div>
              {poolList.map((list, index) => (
                <PoolList
                  key={index}
                  pair={list.pair}
                  logo1={list.logo1}
                  logo2={list.logo2}
                  project={list.project}
                  logo={list.logo}
                  tvl={list.tvl}
                  apr={list.apr}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PoolMain;
